"""empty message

Revision ID: c4585ffc6ac0
Revises: 
Create Date: 2025-08-15 18:17:54.345755

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c4585ffc6ac0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Use IF EXISTS to avoid errors if legacy tables are absent
    op.execute("DROP TABLE IF EXISTS user")
    op.execute("DROP TABLE IF EXISTS paypal_dg_tmp")
    op.alter_column('category', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('category', 'owner',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.create_foreign_key(None, 'category', 'users', ['owner'], ['id'], ondelete='CASCADE')
    op.alter_column('paypal', 'category',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('paypal', 'transaction_date',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('paypal', 'owner',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('paypal', 'amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=False)
    op.drop_constraint(None, 'paypal', type_='foreignkey')
    op.create_foreign_key(None, 'paypal', 'users', ['owner'], ['id'])
    op.create_foreign_key(None, 'paypal', 'category', ['category'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'paypal', type_='foreignkey')
    op.drop_constraint(None, 'paypal', type_='foreignkey')
    op.create_foreign_key(None, 'paypal', 'category', ['category'], ['id'])
    op.alter_column('paypal', 'amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=True)
    op.alter_column('paypal', 'owner',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('paypal', 'transaction_date',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('paypal', 'category',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.create_foreign_key(None, 'category', 'user', ['owner'], ['id'])
    op.alter_column('category', 'owner',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('category', 'name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_table('paypal_dg_tmp',
    sa.Column('transaction_id', sa.INTEGER(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('category', sa.INTEGER(), nullable=False),
    sa.Column('transaction_date', sa.INTEGER(), nullable=False),
    sa.Column('owner', sa.INTEGER(), nullable=False),
    sa.Column('transaction_type', sa.INTEGER(), nullable=False),
    sa.Column('amount', sa.REAL(), nullable=False),
    sa.ForeignKeyConstraint(['category'], ['category.id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('surname', sa.TEXT(), nullable=False),
    sa.Column('password', sa.TEXT(), nullable=False),
    sa.Column('email', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###
